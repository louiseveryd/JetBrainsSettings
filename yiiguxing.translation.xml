<application>
  <component name="AppStorage">
    <histories>
      <item value="signatures" />
      <item value="method the {@code Method} instance corresponding to the interface method invoked on the proxy instance. The declaring class of the {@code Method} object will be the interface that the method was declared in, which may be a superinterface of the proxy interface that the proxy class inherits the method through." />
      <item value="Returns the {@code Class} object representing the class or interface that declares the executable represented by this object." />
      <item value="executable" />
      <item value="superclass" />
      <item value="plugin" />
      <item value="The 2nd level cache transactional buffer. &lt;p&gt; This class holds all cache entries that are to be added to the 2nd level cache during a Session. Entries are sent to the cache when commit is called or discarded if the Session is rolled back. Blocking cache support has been added. Therefore any get() that returns a cache miss will be followed by a put() so any lock associated with the key can be released." />
      <item value="Stale" />
      <item value="multiplier" />
      <item value="Perpetual" />
      <item value="transactional" />
      <item value="Central delegate that manages resources and transaction synchronizations per thread. To be used by resource management code but not by typical application code." />
      <item value="Produces a method handle for a reflected method. It will bypass checks for overriding methods on the receiver, &lt;a href=&quot;MethodHandles.Lookup.htmlequiv&quot;&gt;as if called&lt;a&gt; from an {@code invokespecial} instruction from within the explicitly specified {@code specialCaller}. The type of the method handle will be that of the method, with a suitably restricted receiver type prepended. (The receiver type will be {@code specialCaller} or a subtype.) If the method's {@code accessible} flag is not set, access checking is performed immediately on behalf of the lookup class, as if {@code invokespecial} instruction were being linked. &lt;p&gt; Before method resolution, if the explicitly specified caller class is not identical with the lookup class, or if this lookup object does not have &lt;a href=&quot;MethodHandles.Lookup.htmlprivacc&quot;&gt;private access&lt;a&gt; privileges, the access fails. &lt;p&gt; The returned method handle will have" />
      <item value="separate" />
      <item value="Calls the parent search that will search and register all the candidates. Then the registered objects are post processed to set them as MapperFactoryBeans" />
      <item value="Determine whether the underlying class is independent, i.e. whether it is a top-level class or a nested class (static inner class) that can be constructed independently from an enclosing class." />
      <item value="Filter" />
      <item value="Modify the application context's internal bean definition registry after its standard initialization. All regular bean definitions will have been loaded, but no beans will have been instantiated yet. This allows for adding further bean definitions before the next post-processing phase kicks in. @param registry the bean definition registry used by the application context @throws org.springframework.beans.BeansException in case of errors" />
      <item value="Extension to the standard {@link BeanFactoryPostProcessor} SPI, allowing for the registration of further bean definitions &lt;i&gt;before&lt;i&gt; regular BeanFactoryPostProcessor detection kicks in. In particular, BeanDefinitionRegistryPostProcessor may register further bean definitions which in turn define BeanFactoryPostProcessor instances." />
      <item value="the binary qualified name of the class to be read." />
      <item value="Interface that defines abstract access to the annotations of a specific class, in a form that does not require that class to be loaded yet." />
      <item value="be assigned to objects of this class" />
      <item value="the {@code boolean} value indicating whether objects of the type {@code cls} can be assigned to objects of this class" />
      <item value="Select and return the names of which class(es) should be imported based on the {@link AnnotationMetadata} of the importing @{@link Configuration} class. @return the class names, or an empty array if none" />
      <item value="Interface to be implemented by types that register additional bean definitions when processing @{@link Configuration} classes. Useful when operating at the bean definition level (as opposed to {@code @Bean} methodinstance level) is desired or necessary." />
      <item value="out-of-the-box" />
      <item value="this will get typed mappers working correctly," />
      <item value="this auto-configuration will attempt to register mappers based on the interface definitions in or under the root auto-configuration package." />
      <item value="interface definitions" />
      <item value="If {@link org.mybatis.spring.annotation.MapperScan} is used, or a configuration file is specified as a property, those will be considered, otherwise this auto-configuration will attempt to register mappers based on the interface definitions in or under the root auto-configuration package." />
      <item value="those will be considered" />
      <item value="auto-configuration will attempt to register mappers based on the interface definitions in or under the root auto-configuration package." />
      <item value="Contributes" />
      <item value="Template" />
      <item value="Session" />
      <item value="properties" />
      <item value="metadata" />
      <item value="configure" />
      <item value="autoconfigure" />
      <item value="BeanFactory that enables injection of MyBatis mapper interfaces. It can be set up with a SqlSessionFactory or a pre-configured SqlSessionTemplate." />
      <item value="If mapper registering configuration or mapper scanning configuration not present, this configuration allow to scan mappers based on the same component-scanning path as Spring Boot itself." />
      <item value="Instantiate a class using its 'primary' constructor (for Kotlin classes, potentially having default arguments declared) or its default constructor (for regular Java classes, expecting a standard no-arg setup). &lt;p&gt;Note that this method tries to set the constructor accessible if given a non-accessible (that is, non-public) constructor." />
      <item value="Introspection" />
      <item value="Packages to search type aliases" />
      <item value="Interceptor Chain" />
      <item value="REUSE" />
      <item value="vampire" />
      <item value="Gwt Compatible" />
      <item value="The presence of this annotation on an API indicates that the method may &lt;em&gt;not&lt;em&gt; be used with the &lt;a href=&quot;http:www.gwtproject.org&quot;&gt;Google Web Toolkit&lt;a&gt; (GWT)." />
      <item value="Removal" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2039" />
        <entry key="ENGLISH" value="2016" />
        <entry key="POLISH" value="4" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="6" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="4" />
        <entry key="FINNISH" value="5" />
        <entry key="DUTCH" value="2" />
        <entry key="CZECH" value="5" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="4" />
        <entry key="HINDI" value="12" />
        <entry key="INDONESIAN" value="3" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1615771870980" />
  </component>
  <component name="Settings">
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6ee9f602675977e8" />
      </youdao-translate>
    </option>
  </component>
</application>