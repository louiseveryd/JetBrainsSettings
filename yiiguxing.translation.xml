<application>
  <component name="AppStorage">
    <histories>
      <item value="is System Domain Loader" />
      <item value="tmpdir" />
      <item value="vendor" />
      <item value="isalist" />
      <item value="stream" />
      <item value="paas" />
      <item value="cache" />
      <item value="common" />
      <item value="version" />
      <item value="rabbit" />
      <item value="dependency" />
      <item value="bocloud" />
      <item value="artifact Id" />
      <item value="access" />
      <item value="load Class" />
      <item value="condition" />
      <item value="Absent" />
      <item value="The NO_OP HostnameVerifier essentially turns hostname verification off. This implementation is a no-op, and never throws the SSLException." />
      <item value="trust Self Sign Cert" />
      <item value="connection Timeout" />
      <item value="Integer" />
      <item value="Time Unit" />
      <item value="long" />
      <item value="time Unit" />
      <item value="IMMUTABLE" />
      <item value="verify" />
      <item value="Specific Handler" />
      <item value="Items Handler" />
      <item value="resources" />
      <item value="Overall Health Status" />
      <item value="token" />
      <item value="Function" />
      <item value="Intrinsic" />
      <item value="index of the search key, if it is contained in the array; otherwise, &lt;tt&gt;(-(&lt;i&gt;insertion point&lt;i&gt;) - 1)&lt;tt&gt;. The &lt;i&gt;insertion point&lt;i&gt; is defined as the point at which the key would be inserted into the array: the index of the first element greater than the key, or &lt;tt&gt;a.length&lt;tt&gt; if all elements in the array are less than the specified key. Note that this guarantees that the return value will be &amp;gt;= 0 if and only if the key is found." />
      <item value="void" />
      <item value="args" />
      <item value="decapitalize" />
      <item value="Simple types are defined as anything other than one of recognized container types (arrays, Collections, Maps). For our needs we need not know anything further, since we have no way of dealing with generic types other than Collections and Maps." />
      <item value="filter" />
      <item value="Filters Encoder" />
      <item value="json" />
      <item value="images" />
      <item value="liurui" />
      <item value="Exec" />
      <item value="with Name" />
      <item value="projects" />
      <item value="client" />
      <item value="Exact" />
      <item value="Project" />
      <item value="ADVANCED" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1868" />
        <entry key="ENGLISH" value="1854" />
        <entry key="POLISH" value="4" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="4" />
        <entry key="FINNISH" value="5" />
        <entry key="DUTCH" value="2" />
        <entry key="CZECH" value="2" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="4" />
        <entry key="HINDI" value="12" />
        <entry key="INDONESIAN" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1614563108841" />
  </component>
  <component name="Settings">
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6ee9f602675977e8" />
      </youdao-translate>
    </option>
  </component>
</application>