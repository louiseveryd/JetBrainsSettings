<application>
  <component name="AppStorage">
    <histories>
      <item value="Cache of early singleton objects: bean name to bean instance" />
      <item value="Names of beans that are currently in creation" />
      <item value="allow Early Reference" />
      <item value="canonical" />
      <item value="integrated" />
      <item value="values" />
      <item value="raw" />
      <item value="Smart Initializing Singleton" />
      <item value="initialize" />
      <item value="bootstrap" />
      <item value="instantiation" />
      <item value="Trigger post-initialization callback for all applicable beans..." />
      <item value="Trigger initialization of all non-lazy singleton beans..." />
      <item value="Extension of the {@link FactoryBean} interface. Implementations may indicate whether they always return independent instances, for the case where their {@link isSingleton()} implementation returning {@code false} does not clearly indicate independent instances." />
      <item value="for the case" />
      <item value="independent" />
      <item value="Implementations" />
      <item value="whether early references should be created or not @return the registered singleton object, or {@code null} if none found" />
      <item value="Dereference" />
      <item value="compute If Absent" />
      <item value="FACTORY BEAN PREFIX" />
      <item value="inclusive" />
      <item value="Determines if the definition needs to be re-merged." />
      <item value="Iterate over a copy to allow for init methods which in turn register new bean definitions. While this may not be part of the regular factory bootstrap, it does otherwise work fine." />
      <item value="bean Definition Names" />
      <item value="finish Bean Factory Initialization" />
      <item value="Allow for caching all bean definition metadata, not expecting further changes." />
      <item value="Allow for caching all bean definition metadata, not expecting further changes" />
      <item value="Register a default embedded value resolver if no bean post-processor (such as a PropertyPlaceholderConfigurer bean) registered any before: at this point, primarily for resolution in annotation attribute values." />
      <item value="primarily" />
      <item value="Fast Date Parser" />
      <item value="Pattern" />
      <item value="leniency" />
      <item value="Weaver" />
      <item value="Destruction" />
      <item value="Merged" />
      <item value="register Resolvable Dependency" />
      <item value="{@link BeanPostProcessor} implementation that supplies the {@code ApplicationContext}, {@link org.springframework.core.env.Environment Environment}, or {@link StringValueResolver} for the {@code ApplicationContext} to beans that implement the {@link EnvironmentAware}, {@link EmbeddedValueResolverAware}, {@link ResourceLoaderAware}, {@link ApplicationEventPublisherAware}, {@link MessageSourceAware}, andor {@link ApplicationContextAware} interfaces. &lt;p&gt;Implemented interfaces are satisfied in the order in which they are mentioned above. &lt;p&gt;Application contexts will automatically register this with their underlying bean factory. Applications do not use this directly." />
      <item value="Configure the bean factory with context callbacks." />
      <item value="Last step: publish corresponding event." />
      <item value="Simple Application Event Multicaster" />
      <item value="Application Event Multicaster" />
      <item value="Allows post-processing of the bean factory in context subclasses." />
      <item value="dangling" />
      <item value="schema" />
      <item value="Java-based configuration" />
      <item value="Load or refresh the persistent representation of the configuration, which might be from Java-based configuration, an XML file, a properties file, a relational database schema, or some other format." />
      <item value="Load or refresh the persistent representation of the configuration" />
      <item value="refresh" />
      <item value="attempt" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2514" />
        <entry key="ENGLISH" value="2515" />
        <entry key="ESTONIAN" value="2" />
        <entry key="POLISH" value="4" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="6" />
        <entry key="FRENCH" value="5" />
        <entry key="FILIPINO" value="4" />
        <entry key="FINNISH" value="5" />
        <entry key="DUTCH" value="2" />
        <entry key="CATALAN" value="4" />
        <entry key="CZECH" value="5" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVAK" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="HAWAIIAN" value="1" />
        <entry key="ITALIAN" value="4" />
        <entry key="HINDI" value="12" />
        <entry key="INDONESIAN" value="3" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1618191369766" />
  </component>
</application>