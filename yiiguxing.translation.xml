<application>
  <component name="AppStorage">
    <histories>
      <item value="Signals that an unexpected exception has occurred in a static initializer. An &lt;code&gt;ExceptionInInitializerError&lt;code&gt; is thrown to indicate that an exception occurred during evaluation of a static initializer or the initializer for a static variable." />
      <item value="Subclasses of {@code LinkageError} indicate that a class has some dependency on another class; however, the latter class has incompatibly changed after the compilation of the former class." />
      <item value="First, try calling a side-effect free JNI method to see if the library was already loaded by the application." />
      <item value="We call Selector.open() as this will under the hood cause IOUtil to be loaded. This is a workaround for a possible classloader deadlock that could happen otherwise:" />
      <item value="Subscriber" />
      <item value="subscribe" />
      <item value="synchronized" />
      <item value="For a richer event model, consider using the {@link java.beans} package. For reliable and ordered messaging among threads, consider using one of the concurrent data structures in the {@link java.util.concurrent} package. For reactive streams style programming, see the {@link java.util.concurrent.Flow} API." />
      <item value="This class and the {@link Observer} interface have been deprecated. The event model supported by {@code Observer} and {@code Observable} is quite limited, the order of notifications delivered by {@code Observable} is unspecified, and state changes are not in one-for-one correspondence with notifications." />
      <item value="This class and the {@link Observer} interface have been deprecated. The event model supported by {@code Observer} and {@code Observable} is quite limited" />
      <item value="attach" />
      <item value="Object" />
      <item value="public" />
      <item value="absolute" />
      <item value="Compare Util" />
      <item value="&lt;em&gt;Unsafe&lt;em&gt; operations that should &lt;em&gt;never&lt;em&gt; be called from user-code. These methods are only provided to implement the actual transport, and must be invoked from an IO thread except for the following methods:" />
      <item value="Synchronous Queue" />
      <item value="Exception" />
      <item value="Byte To Message Decoder" />
      <item value="Channel Handler Context" />
      <item value="Returns the current time in milliseconds. Note that while the unit of time of the return value is a millisecond, the granularity of the value depends on the underlying operating system and may be larger. For example, many operating systems measure time in units of tens of milliseconds." />
      <item value="unsigned" />
      <item value="Duplex" />
      <item value="DiscoveryClient represents read operations commonly available to Discovery service such as Netflix Eureka or consul.io" />
      <item value="599795414496383667216982" />
      <item value="Grace" />
      <item value="Privileged" />
      <item value="destroy" />
      <item value="allow" />
      <item value="rethrown" />
      <item value="logged" />
      <item value="Checks if this FilePermission object &quot;implies&quot; the specified permission." />
      <item value="Indicates that the same instance of the annotated {@link ChannelHandler} can be added to one or more {@link ChannelPipeline}s multiple times without a race condition." />
      <item value="Invoked when the current {@link Channel} has read a message from the peer." />
      <item value="Gets called after the {@link ChannelHandler} was added to the actual context and it's ready to handle events." />
      <item value="{@link ChannelHandler} which will get notified for IO-outbound-operations." />
      <item value="{@link ChannelHandler} which adds callbacks for state changes. This allows the user to hook in to state changes easily." />
      <item value="Throttle" />
      <item value="INDEFINITE" />
      <item value="scenarios" />
      <item value="synchronously" />
      <item value="Selects a set of keys whose corresponding channels are ready for IO operations." />
      <item value="The number of keys, possibly zero, whose ready-operation sets were updated" />
      <item value="Operation-set bit for read operations." />
      <item value="deadline" />
      <item value="Submits a Runnable task for execution and returns a Future representing that task. The Future's {@code get} method will return the given result upon successful completion." />
      <item value="Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted. Invocation has no additional effect if already shut down." />
      <item value="mechanics" />
      <item value="Execution" />
      <item value="temporary" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1616" />
        <entry key="ENGLISH" value="1617" />
        <entry key="POLISH" value="3" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="2" />
        <entry key="FINNISH" value="4" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="3" />
        <entry key="HINDI" value="8" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1611537020621" />
  </component>
</application>