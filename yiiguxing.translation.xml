<application>
  <component name="AppStorage">
    <histories>
      <item value="optimize" />
      <item value="unmarshal" />
      <item value="Negative" />
      <item value="Sequence Input Stream" />
      <item value="Sequence" />
      <item value="dim Delete" />
      <item value="exposure" />
      <item value="is Parallel" />
      <item value="Evictor" />
      <item value="liurui" />
      <item value="surefire" />
      <item value="absent" />
      <item value="parameterized" />
      <item value="bocloud" />
      <item value="pipeline" />
      <item value="separator" />
      <item value="discovery" />
      <item value="May be used on any class directly or indirectly annotated with * {@code @Component} or on methods annotated with @{@link Bean}." />
      <item value="Because {@code HibernateFooRepository} is marked with {@code @Primary}, * it will be injected preferentially over the jdbc-based variant assuming both * are present as beans within the same Spring application context, which is * often the case when component-scanning is applied liberally." />
      <item value="UNSTABLE" />
      <item value="LOGGER" />
      <item value="slot" />
      <item value="Assemble" />
      <item value="reified" />
      <item value="Pipeline Service Impl Test SE" />
      <item value="Step" />
      <item value="bocloud days To Keep" />
      <item value="freedom config" />
      <item value="jenkins Config" />
      <item value="mapper" />
      <item value="propagate" />
      <item value="revision" />
      <item value="info" />
      <item value="Rod Johnson" />
      <item value="Unlock" />
      <item value="Commercial Features" />
      <item value="max Wait" />
      <item value="shut down" />
      <item value="Discard Oldest Policy" />
      <item value="Json Serialize" />
      <item value="Date Serializer" />
      <item value="Mandy Chung" />
      <item value="&lt;p&gt;&lt;b&gt;Extension example&lt;/b&gt;. Most extensions of this class * override one or more of the protected hook methods. For example, * here is a subclass that adds a simple pause/resume feature: * * &lt;pre&gt; {@code * class PausableThreadPoolExecutor extends ThreadPoolExecutor { * private boolean isPaused; * private ReentrantLock pauseLock = new ReentrantLock(); * private Condition unpaused = pauseLock.newCondition(); * * public PausableThreadPoolExecutor(...) { super(...); } * * protected void beforeExecute(Thread t, Runnable r) { * super.beforeExecute(t, r); * pauseLock.lock(); * try { * while (isPaused) unpaused.await(); * } catch (InterruptedException ie) { * t.interrupt(); * } finally { * pauseLock.unlock(); * } * } * * public void pause() { * pauseLock.lock(); * try { * isPaused = true; * } finally { * pauseLock.unlock(); * } * } * * public void resume() { * pauseLock.lock(); * try { * isPaused = false; * unpaused.signalAll(); * } finally { * pauseLock.unlock(); * } * } * }}&lt;/pre&gt;" />
      <item value="offer" />
      <item value="Discard Policy" />
      <item value="Abort Policy" />
      <item value="Abort" />
      <item value="cluster Id" />
      <item value="Implicit" />
      <item value="Socket Timeout Exception" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1308" />
        <entry key="ENGLISH" value="1276" />
        <entry key="POLISH" value="3" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="2" />
        <entry key="FINNISH" value="3" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="3" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="3" />
        <entry key="HINDI" value="7" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6ee9f602675977e8" />
      </youdao-translate>
    </option>
  </component>
</application>