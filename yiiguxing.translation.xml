<application>
  <component name="AppStorage">
    <histories>
      <item value="Aggregator" />
      <item value="Replaying Decoder" />
      <item value="REPLAY" />
      <item value="Called when the input of the channel was closed which may be because it changed to inactive or because of {@link ChannelInputShutdownEvent}." />
      <item value="Channel Handler Context" />
      <item value="Exception" />
      <item value="Object" />
      <item value="decode Last" />
      <item value="decode" />
      <item value="abstract" />
      <item value="Channel Pipeline" />
      <item value="second" />
      <item value="pipeline" />
      <item value="readable Bytes" />
      <item value="For example here is an implementation which reads all readable bytes from the input {@link ByteBuf} and create a new {@link ByteBuf}." />
      <item value="{@link ChannelInboundHandlerAdapter} which decodes bytes in a stream-like fashion from one {@link ByteBuf} to an other Message type." />
      <item value="discardable" />
      <item value="Http Request Encoder" />
      <item value="Premature" />
      <item value="Premature Channel Closure Exception" />
      <item value="lacks" />
      <item value="management" />
      <item value="state" />
      <item value="additional" />
      <item value="Determines if the class or interface represented by this {@code Class} object is either the same as, or is a superclass or superinterface of, the class or interface represented by the specified {@code Class} parameter. It returns {@code true} if so; otherwise it returns {@code false}. If this {@code Class} object represents a primitive type, this method returns {@code true} if the specified {@code Class} parameter is exactly this {@code Class} object; otherwise it returns {@code false}." />
      <item value="Throws MethodArgumentNotValidException if validation fails. @throws HttpMessageNotReadableException if {@link RequestBodyrequired()} is {@code true} and there is no body content or if there is no suitable converter to read the content with." />
      <item value="validation" />
      <item value="Method Argument Not Valid Exception" />
      <item value="A combination of {@link HttpRequestEncoder} and {@link HttpResponseDecoder} which enables easier client side HTTP implementation. {@link HttpClientCodec} provides additional state management for &lt;tt&gt;HEAD&lt;tt&gt; and &lt;tt&gt;CONNECT&lt;tt&gt; requests, which {@link HttpResponseDecoder} lacks. Please refer to {@link HttpResponseDecoder} to learn what additional state management needs to be done for &lt;tt&gt;HEAD&lt;tt&gt; and &lt;tt&gt;CONNECT&lt;tt&gt; and why {@link HttpResponseDecoder} can not handle it by itself." />
      <item value="atomic" />
      <item value="Signals that an unexpected exception has occurred in a static initializer. An &lt;code&gt;ExceptionInInitializerError&lt;code&gt; is thrown to indicate that an exception occurred during evaluation of a static initializer or the initializer for a static variable." />
      <item value="Subclasses of {@code LinkageError} indicate that a class has some dependency on another class; however, the latter class has incompatibly changed after the compilation of the former class." />
      <item value="First, try calling a side-effect free JNI method to see if the library was already loaded by the application." />
      <item value="We call Selector.open() as this will under the hood cause IOUtil to be loaded. This is a workaround for a possible classloader deadlock that could happen otherwise:" />
      <item value="Subscriber" />
      <item value="subscribe" />
      <item value="synchronized" />
      <item value="For a richer event model, consider using the {@link java.beans} package. For reliable and ordered messaging among threads, consider using one of the concurrent data structures in the {@link java.util.concurrent} package. For reactive streams style programming, see the {@link java.util.concurrent.Flow} API." />
      <item value="This class and the {@link Observer} interface have been deprecated. The event model supported by {@code Observer} and {@code Observable} is quite limited, the order of notifications delivered by {@code Observable} is unspecified, and state changes are not in one-for-one correspondence with notifications." />
      <item value="This class and the {@link Observer} interface have been deprecated. The event model supported by {@code Observer} and {@code Observable} is quite limited" />
      <item value="attach" />
      <item value="public" />
      <item value="absolute" />
      <item value="Compare Util" />
      <item value="&lt;em&gt;Unsafe&lt;em&gt; operations that should &lt;em&gt;never&lt;em&gt; be called from user-code. These methods are only provided to implement the actual transport, and must be invoked from an IO thread except for the following methods:" />
      <item value="Synchronous Queue" />
      <item value="Byte To Message Decoder" />
      <item value="Returns the current time in milliseconds. Note that while the unit of time of the return value is a millisecond, the granularity of the value depends on the underlying operating system and may be larger. For example, many operating systems measure time in units of tens of milliseconds." />
      <item value="unsigned" />
      <item value="Duplex" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1653" />
        <entry key="ENGLISH" value="1654" />
        <entry key="POLISH" value="3" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="2" />
        <entry key="FINNISH" value="4" />
        <entry key="DUTCH" value="1" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="3" />
        <entry key="HINDI" value="8" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1611537020621" />
  </component>
  <component name="Settings">
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6ee9f602675977e8" />
      </youdao-translate>
    </option>
  </component>
</application>