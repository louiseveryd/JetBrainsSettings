<application>
  <component name="AppStorage">
    <histories>
      <item value="Abstract Queued Synchronizer" />
      <item value="CLH" />
      <item value="initial" />
      <item value="synchronization" />
      <item value="return" />
      <item value="search" />
      <item value="synchronized" />
      <item value="public" />
      <item value="use serialVersionUID from JDK 1.0.2 for interoperability" />
      <item value="interoperability" />
      <item value="desired" />
      <item value="Abstract" />
      <item value="atomically" />
      <item value="reference" />
      <item value="maintains" />
      <item value="mechanics" />
      <item value="validating" />
      <item value="containers" />
      <item value="Daemon" />
      <item value="forever" />
      <item value="Thread state for a thread blocked waiting for a monitor lock. * A thread in the blocked state is waiting for a monitor lock * to enter a synchronized block/method or * reenter a synchronized block/method after calling * {@link Object#wait() Object.wait}." />
      <item value="Thread state for a thread which has not yet started." />
      <item value="State" />
      <item value="enum" />
      <item value="A thread can be in only one state at a given point in time. * These states are virtual machine states which do not reflect * any operating system thread states." />
      <item value="A thread state. A thread can be in one of the following states: * &lt;ul&gt; * &lt;li&gt;{@link #NEW}&lt;br&gt; * A thread that has not yet started is in this state. * &lt;/li&gt; * &lt;li&gt;{@link #RUNNABLE}&lt;br&gt; * A thread executing in the Java virtual machine is in this state. * &lt;/li&gt; * &lt;li&gt;{@link #BLOCKED}&lt;br&gt; * A thread that is blocked waiting for a monitor lock * is in this state. * &lt;/li&gt; * &lt;li&gt;{@link #WAITING}&lt;br&gt; * A thread that is waiting indefinitely for another thread to * perform a particular action is in this state. * &lt;/li&gt; * &lt;li&gt;{@link #TIMED_WAITING}&lt;br&gt; * A thread that is waiting for another thread to perform an action * for up to a specified waiting time is in this state. * &lt;/li&gt; * &lt;li&gt;{@link #TERMINATED}&lt;br&gt; * A thread that has exited is in this state. * &lt;/li&gt; * &lt;/ul&gt;" />
      <item value="Throwable" />
      <item value="ignore" />
      <item value="appropriate" />
      <item value="&lt;p&gt; It is rarely appropriate to use this method. It may be useful * for debugging or testing purposes, where it may help to reproduce * bugs due to race conditions. It may also be useful when designing * concurrency control constructs such as the ones in the * {@link java.util.concurrent.locks} package." />
      <item value="Yield is a heuristic attempt to improve relative progression * between threads that would otherwise over-utilise a CPU. Its use * should be combined with detailed profiling and benchmarking to * ensure that it actually has the desired effect." />
      <item value="A hint to the scheduler that the current thread is willing to yield * its current use of a processor. The scheduler is free to ignore this * hint." />
      <item value="temporarily" />
      <item value="Thread Group" />
      <item value="rejected" />
      <item value="Tests if some Thread has been interrupted. The interrupted state * is reset or not based on the value of ClearInterrupted that is * passed." />
      <item value="Removes and signals all waiting threads, invokes done(), and * nulls out callable." />
      <item value="The run state of this task, initially NEW. The run state * transitions to a terminal state only in methods set, * setException, and cancel. During completion, state may take on * transient values of COMPLETING (while outcome is being set) or * INTERRUPTING (only while interrupting the runner to satisfy a * cancel(true)). Transitions from these intermediate to final * states use cheaper ordered/lazy writes because values are unique * and cannot be further modified." />
      <item value="state" />
      <item value="queue" />
      <item value="INTERRUPTED" />
      <item value="INTERRUPTING" />
      <item value="CANCELLED" />
      <item value="EXCEPTIONAL" />
      <item value="NORMAL" />
      <item value="COMPLETING" />
      <item value="typically" />
      <item value="exit" />
      <item value="method" />
      <item value="extends" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="850" />
        <entry key="ENGLISH" value="840" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="3" />
        <entry key="FILIPINO" value="2" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="2" />
        <entry key="HINDI" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6ee9f602675977e8" />
      </youdao-translate>
    </option>
  </component>
</application>