<application>
  <component name="AppStorage">
    <histories>
      <item value="Descending Set" />
      <item value="Cartesian Set" />
      <item value="Cartesian" />
      <item value="symmetric" />
      <item value="Returns a power of two size for the given target capacity." />
      <item value="threshold" />
      <item value="sequential" />
      <item value="blockquote" />
      <item value="minus" />
      <item value="MILLISECONDS" />
      <item value="A {@link RejectedExecutionHandler} that blocks the caller until * the executor has room in its queue, or a timeout occurs (in which * case a {@link RejectedExecutionException} is thrown." />
      <item value="blocks" />
      <item value="INSECTION" />
      <item value="intersection" />
      <item value="library" />
      <item value="complement" />
      <item value="versa" />
      <item value="vice" />
      <item value="bounded" />
      <item value="optionally-bounded" />
      <item value="Characteristics of this spliterator's source or * elements. The characteristics {@code SIZED} and {@code SUBSIZED} * are additionally reported unless {@code CONCURRENT} is supplied." />
      <item value="characteristics" />
      <item value="experimental" />
      <item value="public" />
      <item value="This method works as if invoking it were equivalent to evaluating the * expression:" />
      <item value="interoperability" />
      <item value="cancel" />
      <item value="zorro Pool" />
      <item value="Blank" />
      <item value="Propagation" />
      <item value="Absent" />
      <item value="MILLISECOND" />
      <item value="inventory" />
      <item value="exact" />
      <item value="exast" />
      <item value="PROTOCOL" />
      <item value="Vulnerability" />
      <item value="SLASH" />
      <item value="Any program that relies on asynchronous * task processing to complete before program termination should * invoke {@code commonPool().}{@link #awaitQuiescence awaitQuiescence}, * before exit." />
      <item value="unaffected" />
      <item value="statistic" />
      <item value="serialze Features" />
      <item value="parse Features" />
      <item value="flexible" />
      <item value="Returns a new CompletableFuture that is completed when this * CompletableFuture completes, with the result of the given * function of the exception triggering this CompletableFuture's * completion when it completes exceptionally; otherwise, if this * CompletableFuture completes normally, then the returned * CompletableFuture also completes normally with the same value. * Note: More flexible versions of this functionality are * available using methods {@code whenComplete} and {@code handle}." />
      <item value="fuzzy" />
      <item value="pow" />
      <item value="Recursive" />
      <item value="current Time Millis" />
      <item value="Re Cursive" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="473" />
        <entry key="ENGLISH" value="474" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="3" />
        <entry key="FRENCH" value="2" />
        <entry key="FILIPINO" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="214c2df8ff58c021" />
      </youdao-translate>
    </option>
  </component>
</application>