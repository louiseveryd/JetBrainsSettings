<application>
  <component name="AppStorage">
    <histories>
      <item value="liurui" />
      <item value="Exec" />
      <item value="with Name" />
      <item value="projects" />
      <item value="client" />
      <item value="Exact" />
      <item value="Project" />
      <item value="ADVANCED" />
      <item value="directly" />
      <item value="Jenkins" />
      <item value="List Op" />
      <item value="Override" />
      <item value="Sets maximum time to live for persistent connections" />
      <item value="Present" />
      <item value="superclass" />
      <item value="uninstantiable" />
      <item value="Used by VM to control lowmem implicit suspension." />
      <item value="decremented" />
      <item value="Performs blocking or timed wait for a task, depending on current configuration settings, or returns null if this worker must exit because of any of: 1. There are more than maximumPoolSize workers (due to a call to setMaximumPoolSize). 2. The pool is stopped. 3. The pool is shutdown and the queue is empty. 4. This worker timed out waiting for a task, and timed-out workers are subject to termination (that is, {@code allowCoreThreadTimeOut || workerCount &gt; corePoolSize}) both before and after the timed wait, and if the queue is non-empty, this worker is not the last thread in the pool." />
      <item value="Transitions to TERMINATED state if either (SHUTDOWN and pool and queue empty) or (STOP and pool empty). If otherwise eligible to terminate but workerCount is nonzero, interrupts an idle worker to ensure that shutdown signals propagate. This method must be called following any action that might make termination possible -- reducing worker count or removing tasks from the queue during shutdown. The method is non-private to allow access from ScheduledThreadPoolExecutor." />
      <item value="Interrupts threads that might be waiting for tasks (as indicated by not being locked) so they can check for termination or configuration changes. Ignores SecurityExceptions (in which case some threads may remain uninterrupted)." />
      <item value="Performs blocking or timed wait for a task, depending on current configuration settings, or returns null if this worker must exit because of any of: 1. There are more than maximumPoolSize workers (due to a call to setMaximumPoolSize). 2. The pool is stopped. 3. The pool is shutdown and the queue is empty. 4. This worker timed out waiting for a task, and timed-out workers are subject to termination (that is, {@code allowCoreThreadTimeOut || workerCount &gt; corePoolSize}) both before and after the timed wait, and if the queue is non-empty, this worker is not the last thread in the pool. @return task, or null if the worker must exit, in which case workerCount is decremented" />
      <item value="2. Before running any task, the lock is acquired to prevent other pool interrupts while the task is executing, and then we ensure that unless pool is stopping, this thread does not have its interrupt set." />
      <item value="We may start out with an initial task, in which case we don't need to get the first one. Otherwise, as long as pool is running, we get tasks from getTask. If it returns null then the worker exits due to changed pool state or configuration parameters. Other exits result from exception throws in external code, in which case completedAbruptly holds, which usually leads processWorkerExit to replace this thread." />
      <item value="Main worker run loop. Repeatedly gets tasks from queue and executes them, while coping with a number of issues:" />
      <item value="So we recheck state and if necessary roll back the enqueuing if stopped, or start a new thread if there are none." />
      <item value="If a task can be successfully queued, then we still need to double-check whether we should have added a thread (because existing ones died since last checking) or that the pool shut down since entry into this method" />
      <item value="offer" />
      <item value="Http Method" />
      <item value="Http Status" />
      <item value="Response Entity" />
      <item value="Resource" />
      <item value="Rest Template" />
      <item value="stereo" />
      <item value="stereotype" />
      <item value="wire" />
      <item value="Autowired" />
      <item value="Parameterized Type Reference" />
      <item value="the array of {@code Method} objects representing the public methods of this class" />
      <item value="the array of {@code Method} objects representing all the declared methods of this class" />
      <item value="cluster List" />
      <item value="Cluster" />
      <item value="false" />
      <item value="boolean" />
      <item value="env Relate" />
      <item value="Array List" />
      <item value="break" />
      <item value="continue" />
      <item value="addon" />
      <item value="addons" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1816" />
        <entry key="ENGLISH" value="1808" />
        <entry key="POLISH" value="4" />
        <entry key="DANISH" value="2" />
        <entry key="GERMAN" value="5" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="3" />
        <entry key="FINNISH" value="5" />
        <entry key="DUTCH" value="2" />
        <entry key="CZECH" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="ROMANIAN" value="3" />
        <entry key="ZULU" value="1" />
        <entry key="NORWEGIAN" value="2" />
        <entry key="PORTUGUESE" value="4" />
        <entry key="SWEDISH" value="1" />
        <entry key="SPANISH" value="1" />
        <entry key="ITALIAN" value="4" />
        <entry key="HINDI" value="10" />
        <entry key="INDONESIAN" value="2" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1612142241580" />
  </component>
  <component name="Settings">
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="6ee9f602675977e8" />
      </youdao-translate>
    </option>
  </component>
</application>